"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[821],{9668:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>A,contentTitle:()=>w,default:()=>S,frontMatter:()=>k,metadata:()=>C,toc:()=>T});var r=a(5893),t=a(1151),s=a(7294),l=a(512),d=a(2466),i=a(6550),o=a(469),u=a(1980),c=a(7392),h=a(12);function p(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function g(e){const{values:n,children:a}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:a,attributes:r,default:t}}=e;return{value:n,label:a,attributes:r,default:t}}))}(a);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function m(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:a}=e;const r=(0,i.k6)(),t=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,u._X)(t),(0,s.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(r.location.search);n.set(t,e),r.replace({...r.location,search:n.toString()})}),[t,r])]}function f(e){const{defaultValue:n,queryString:a=!1,groupId:r}=e,t=g(e),[l,d]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:t}))),[i,u]=b({queryString:a,groupId:r}),[c,p]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,t]=(0,h.Nk)(a);return[r,(0,s.useCallback)((e=>{a&&t.set(e)}),[a,t])]}({groupId:r}),f=(()=>{const e=i??c;return m({value:e,tabValues:t})?e:null})();(0,o.Z)((()=>{f&&d(f)}),[f]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);d(e),u(e),p(e)}),[u,p,t]),tabValues:t}}var v=a(2389);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function j(e){let{className:n,block:a,selectedValue:t,selectValue:s,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,d.o5)(),c=e=>{const n=e.currentTarget,a=o.indexOf(n),r=i[a].value;r!==t&&(u(n),s(r))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;n=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;n=o[a]??o[o.length-1];break}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},n),children:i.map((e=>{let{value:n,label:a,attributes:s}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>o.push(e),onKeyDown:h,onClick:c,...s,className:(0,l.Z)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function y(e){let{lazy:n,children:a,selectedValue:t}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===t));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function I(e){const n=f(e);return(0,r.jsxs)("div",{className:(0,l.Z)("tabs-container",x.tabList),children:[(0,r.jsx)(j,{...e,...n}),(0,r.jsx)(y,{...e,...n})]})}function N(e){const n=(0,v.Z)();return(0,r.jsx)(I,{...e,children:p(e.children)},String(n))}const q={tabItem:"tabItem_Ymn6"};function G(e){let{children:n,hidden:a,className:t}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,l.Z)(q.tabItem,t),hidden:a,children:n})}const k={sidebar_position:5,title:"Graph API"},w="Graph API",C={id:"graph-api",title:"Graph API",description:"Graph API",source:"@site/docs/graph-api.mdx",sourceDirName:".",slug:"/graph-api",permalink:"/zh-cn/docs/graph-api",draft:!1,unlisted:!1,editUrl:"https://github.com/QubitPi/nexusgraph/tree/master/docs/docs/graph-api.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Graph API"},sidebar:"tutorialSidebar",previous:{title:"Development",permalink:"/zh-cn/docs/development"},next:{title:"Concepts",permalink:"/zh-cn/docs/concept"}},A={},T=[{value:"Custom GraphClient",id:"custom-graphclient",level:2},{value:"Custom API Server",id:"custom-api-server",level:2},{value:"Saving or Updating",id:"saving-or-updating",level:3},{value:"Nodes",id:"nodes",level:4},{value:"Links",id:"links",level:4},{value:"Graph",id:"graph",level:4},{value:"Getting Graph By ID",id:"getting-graph-by-id",level:3},{value:"Deleting Graph By ID",id:"deleting-graph-by-id",level:3},{value:"Nodes",id:"nodes-1",level:4},{value:"Getting Graph Metadata list by User ID",id:"getting-graph-metadata-list-by-user-id",level:3}];function E(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"graph-api",children:"Graph API"}),"\n",(0,r.jsx)(n.h2,{id:"custom-graphclient",children:"Custom GraphClient"}),"\n",(0,r.jsx)(n.h2,{id:"custom-api-server",children:"Custom API Server"}),"\n",(0,r.jsx)(n.p,{children:"The Graph API server should support the following Operations with specified GraphQL query and response schema:"}),"\n",(0,r.jsx)(n.h3,{id:"saving-or-updating",children:"Saving or Updating"}),"\n",(0,r.jsx)(n.h4,{id:"nodes",children:"Nodes"}),"\n",(0,r.jsxs)(N,{children:[(0,r.jsx)(G,{value:"graphql-query",label:"GraphQL Query",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'mutation {\n    node(\n      op:UPSERT\n      data:[\n        {fields: "{\\"name\\": \\"My Node\\"}", noteId:"1"},\n        {fields: "{\\"name\\": \\"My Node 2\\"}", noteId:"2"}\n      ]) {\n        edges {\n            node {\n                id\n            }\n        }\n    }\n}\n'})})}),(0,r.jsx)(G,{value:"graphql-response",label:"Response",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "node": {\n      "edges": [\n        {\n          "node": {\n            "id": "15"\n          }\n        },\n        {\n          "node": {\n            "id": "16"\n          }\n        }\n      ]\n    }\n  }\n}\n'})})})]}),"\n",(0,r.jsx)(n.h4,{id:"links",children:"Links"}),"\n",(0,r.jsxs)(N,{children:[(0,r.jsx)(G,{value:"graphql-query",label:"GraphQL Query",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'mutation {\n    link(\n        op:UPSERT\n        data: [     \n          {\n            sourceNode:{id:15},\n            targetNode:{id:16},\n            fields: "{\\"type\\": \\"points to\\"}"\n          },\n          {\n            sourceNode:{id:13},\n            targetNode:{id:14},\n            fields: "{\\"type\\": \\"points to\\"}"\n          }\n        ]\n    ) {\n        edges {\n            node {\n                id\n            }\n        }\n    }\n}\n'})})}),(0,r.jsx)(G,{value:"graphql-response",label:"Response",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "link": {\n      "edges": [\n        {\n          "node": {\n            "id": "4"\n          }\n        },\n        {\n          "node": {\n            "id": "5"\n          }\n        }\n      ]\n    }\n  }\n}\n'})})})]}),"\n",(0,r.jsx)(n.h4,{id:"graph",children:"Graph"}),"\n",(0,r.jsxs)(N,{children:[(0,r.jsx)(G,{value:"graphql-query",label:"GraphQL Query",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'mutation {\n    graph(\n        op: UPSERT\n        data:{\n            userId: "10000",\n            name: "My Graph",\n            nodes: [{id:13},{id:14},{id:15},{id:16}],\n            links: [{id:4},{id:5}]\n        }\n    ) {\n      edges {\n        node {\n            id\n            userId\n            name\n            nodes {\n                edges {\n                    node {\n                        ...nodeAttributes\n                    }\n                }\n            }\n            links {\n                edges {\n                    node {\n                        id\n                        sourceNode {\n                            edges {\n                                node {\n                                    ...nodeAttributes\n                                }\n                            }\n                        }\n                        targetNode {\n                            edges {\n                                node {\n                                    ...nodeAttributes\n                                }\n                            }\n                        }\n                        fields\n                    }\n                }\n            }\n            dateCreated\n            dateUpdated\n        }\n      }\n    }\n}\n\nfragment nodeAttributes on Node {\n  id\n  noteId\n  fields\n}\n'})})}),(0,r.jsx)(G,{value:"graphql-response",label:"Response",children:(0,r.jsxs)(n.p,{children:["The response format is the same as that of ",(0,r.jsx)(n.a,{href:"#getting-graph-by-id",children:"Getting Graph By ID"})]})})]}),"\n",(0,r.jsx)(n.h3,{id:"getting-graph-by-id",children:"Getting Graph By ID"}),"\n",(0,r.jsxs)(N,{children:[(0,r.jsx)(G,{value:"graphql-query",label:"GraphQL Query",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'{\n    graph(ids: ["5"]) {\n        edges {\n            node {\n                id\n                userId\n                name\n                nodes {\n                    edges {\n                        node {\n                            ...nodeAttributes\n                        }\n                    }\n                }\n                links {\n                    edges {\n                        node {\n                            id\n                            sourceNode {\n                                edges {\n                                    node {\n                                        ...nodeAttributes\n                                    }\n                                }\n                            }\n                            targetNode {\n                                edges {\n                                    node {\n                                        ...nodeAttributes\n                                    }\n                                }\n                            }\n                            fields\n                        }\n                    }\n                }\n                dateCreated\n                dateUpdated\n            }\n        }\n    }\n}\n\nfragment nodeAttributes on Node {\n    id\n    noteId\n    fields\n}\n'})})}),(0,r.jsx)(G,{value:"graphql-response",label:"Response",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "graph": {\n      "edges": [\n        {\n          "node": {\n            "id": "5",\n            "userId": "10000",\n            "name": "My Graph",\n            "nodes": {\n              "edges": [\n                {\n                  "node": {\n                    "id": "11",\n                    "noteId": "1",\n                    "fields": "{\\"name\\": \\"My Node\\"}"\n                  }\n                },\n                {\n                  "node": {\n                    "id": "12",\n                    "noteId": "1",\n                    "fields": "{\\"name\\": \\"My Node\\"}"\n                  }\n                }\n              ]\n            },\n            "links": {\n              "edges": [\n                {\n                  "node": {\n                    "id": "3",\n                    "sourceNode": {\n                      "edges": [\n                        {\n                          "node": {\n                            "id": "11",\n                            "noteId": "1",\n                            "fields": "{\\"name\\": \\"My Node\\"}"\n                          }\n                        }\n                      ]\n                    },\n                    "targetNode": {\n                      "edges": [\n                        {\n                          "node": {\n                            "id": "12",\n                            "noteId": "1",\n                            "fields": "{\\"name\\": \\"My Node\\"}"\n                          }\n                        }\n                      ]\n                    },\n                    "fields": "{\\"type\\": \\"points to\\"}"\n                  }\n                }\n              ]\n            },\n            "dateCreated": 1705382225651,\n            "dateUpdated": 1705382225651\n          }\n        }\n      ]\n    }\n  }\n}\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"deleting-graph-by-id",children:"Deleting Graph By ID"}),"\n",(0,r.jsx)(n.h4,{id:"nodes-1",children:"Nodes"}),"\n",(0,r.jsxs)(N,{children:[(0,r.jsx)(G,{value:"graphql-query",label:"GraphQL Query",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:'mutation {\n  graph(op: DELETE, ids: ["5"]) {\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n'})})}),(0,r.jsx)(G,{value:"graphql-response",label:"Response",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "graph": {\n      "edges": []\n    }\n  }\n}\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"getting-graph-metadata-list-by-user-id",children:"Getting Graph Metadata list by User ID"}),"\n",(0,r.jsxs)(N,{children:[(0,r.jsx)(G,{value:"graphql-query",label:"GraphQL Query",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-graphql",children:"{\n  graph {\n      edges {\n          node {\n            id\n            name\n            dateCreated\n            dateUpdated\n          }\n      }\n  }\n}\n"})})}),(0,r.jsx)(G,{value:"graphql-response",label:"Response",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "data": {\n    "graph": {\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "name": "My Graph",\n            "dateCreated": 1705372839620,\n            "dateUpdated": 1705372839620\n          }\n        }\n      ]\n    }\n  }\n}\n'})})})]})]})}function S(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(E,{...e})}):E(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>d,a:()=>l});var r=a(7294);const t={},s=r.createContext(t);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);